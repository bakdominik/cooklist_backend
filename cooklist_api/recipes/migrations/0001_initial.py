# Generated by Django 4.0 on 2022-01-01 12:00

import cooklist_api.recipes.enums
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "measure_type",
                    models.CharField(
                        choices=[
                            ("G", "g"),
                            ("ML", "ml"),
                            ("PCS", "pcs"),
                            ("GLASS", "glass"),
                            ("SPOON", "spoon"),
                            ("TEASPOON", "teaspoon"),
                        ],
                        default="G",
                        max_length=50,
                    ),
                ),
                ("amount", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("preparation_time", models.DurationField()),
                ("servings", models.IntegerField()),
                ("public", models.BooleanField(default=True)),
                ("image", models.ImageField(blank=True, upload_to="")),
                (
                    "utensils",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255), size=None
                    ),
                ),
                (
                    "type",
                    enumfields.fields.EnumIntegerField(
                        enum=cooklist_api.recipes.enums.RecipeType
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="authored_recipes",
                        to="auth.user",
                    ),
                ),
                (
                    "ingredients",
                    models.ManyToManyField(
                        blank=True, through="recipes.Ingredient", to="recipes.Product"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ScheduledRecipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_planned", models.DateField()),
                (
                    "meal_type",
                    enumfields.fields.EnumIntegerField(
                        enum=cooklist_api.recipes.enums.MealType
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedule",
                        to="recipes.recipe",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="ingredient",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ingredients",
                to="recipes.product",
            ),
        ),
        migrations.AddField(
            model_name="ingredient",
            name="recipe",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="recipes.recipe"
            ),
        ),
        migrations.CreateModel(
            name="RecipeStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("step_number", models.IntegerField()),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField()),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="recipes.recipe",
                    ),
                ),
            ],
            options={
                "unique_together": {("recipe", "step_number")},
            },
        ),
    ]
